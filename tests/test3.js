

const headElem = document.getElementById("head");
const imageElem = document.getElementById("image");
const bodyElem = document.getElementsByClassName("body");
const pages1Elem = document.getElementsByClassName("footer__content");
const headtextElem = document.getElementsByClassName("quiz__head");
const buttonsElem = document.getElementById("buttons");
const pagesElem = document.getElementById("pages");

//Класс, который представляет сам тест
class Quiz
{
	constructor(type, questions, results1, results2, results3)
	{
		//Тип теста: 1 - классический тест с правильными ответами, 2 - тест без правильных ответов
		this.type = type;

		//Массив с вопросами
		this.questions = questions;

		//Массив с возможными результатами
		this.results1 = results1;
		this.results2 = results2;
		this.results3 = results3;
		//Количество набранных очков
		this.score1 = 0;
		this.score2 = 0;
		this.score3 = 0;
		//Номер результата из массива
		this.result1 = 0;
		this.result2 = 0;
		this.result3 = 0;
		this.result = 0;
		//Номер текущего вопроса
		this.current = 0;
	}

	Click(index)
	{
		//Добавляем очки
		let value = this.questions[this.current].Click(index);
		if (value == 13 || value == 121 || value == 122 || value == 11) this.score1++;
		if (value == 23 || value == 221 || value == 222 || value == 21) this.score2++;
		if (value == 31 || value == 32 || value == 33) this.score3++;

		let correct = -1;

		//Если было добавлено хотя одно очко, то считаем, что ответ верный
		if(value >= 1)
		{
			correct = index;
		}
		else
		{
			//Иначе ищем, какой ответ может быть правильным
			for(let i = 0; i < this.questions[this.current].answers.length; i++)
			{
				if(this.questions[this.current].answers[i].value >= 1)
				{
					correct = i;
					break;
				}
			}
		}

		this.Next();

		return correct;
	}
	//Переход к следующему вопросу
	Next()
	{
		this.current++;
		
		if(this.current >= this.questions.length) 
		{
			this.End();
		}
	}

	//Если вопросы кончились, этот метод проверит, какой результат получил пользователь
	End()
	{
		for(let i = 0; i < this.results1.length; i++)
		{
			if(this.results1[i].Check(this.score1))
			{
				this.result1 = i;
			}
		}
		for(let i = 0; i < this.results2.length; i++)
		{
			if(this.results2[i].Check(this.score2))
			{
				this.result2 = i;
			}
		}
		for(let i = 0; i < this.results3.length; i++)
		{
			if(this.results3[i].Check(this.score3))
			{
				this.result3 = i;
			}
		}
		if (this.score3 > this.score2 && this.score3 > this.score1) this.result = 3;
		if (this.score2 > this.score3 && this.score2 > this.score1) this.result = 2;
		if (this.score1 > this.score2 && this.score1 > this.score3) this.result = 1;
	}
} 

//Класс, представляющий вопрос
class Question 
{
	constructor(img, answers)
	{
		this.img = img; 
		this.answers = answers; 
	}

	Click(index) 
	{
		return this.answers[index].value; 
	}
}

//Класс, представляющий ответ
class Answer 
{
	constructor(text, value) 
	{
		this.text = text; 
		this.value = value; 
	}
}

//Класс, представляющий результат
class Result 
{
	constructor(text, value)
	{
		this.text = text;
		this.value = value;
	}

	//Этот метод проверяет, достаточно ли очков набрал пользователь
	Check(value)
	{
		if(this.value <= value)
		{
			return true;
		}
		else 
		{
			return false;
		}
	}
}

//Массив с результатами
const results1 = 
[
	new Result("Экстрапунитивные реакции - реакция направлена на живое или неживое окружение в форме подчеркивания степени фрустрирующей ситуации, в форме осуждения внешней причины фрустрации, или вменяется в обязанность другому лицу разрешить данную ситуацию. <br/> С фиксацией на препятствии - в ответе испытуемого препятствие, вызвавшее фрустрацию, всячески подчеркивается или интерпретируется как своего рода благо, а не препятствие, или описывается как не имеющее серьезного значения.", 0-2),
	new Result("Экстрапунитивные реакции - реакция направлена на живое или неживое окружение в форме подчеркивания степени фрустрирующей ситуации, в форме осуждения внешней причины фрустрации, или вменяется в обязанность другому лицу разрешить данную ситуацию. <br/> С фиксацией на самозащите - главную роль в ответе испытуемого играет защита себя, своего «Я», и субъект или порицает кого-то, или признает свою вину, или же отмечает, что ответственность за фрустрацию никому не может быть приписана. Враждебность, порицание направлены против кого-либо или чего-либо в окружении.", 3-4),
	new Result("Экстрапунитивные реакции - реакция направлена на живое или неживое окружение в форме подчеркивания степени фрустрирующей ситуации, в форме осуждения внешней причины фрустрации, или вменяется в обязанность другому лицу разрешить данную ситуацию. <br/> С фиксацией на самозащите - главную роль в ответе испытуемого играет защита себя, своего «Я», и субъект или порицает кого-то, или признает свою вину, или же отмечает, что ответственность за фрустрацию никому не может быть приписана. Испытуемый активно отрицает свою вину за совершенный поступок.", 4-5),
	new Result("Экстрапунитивные реакции - реакция направлена на живое или неживое окружение в форме подчеркивания степени фрустрирующей ситуации, в форме осуждения внешней причины фрустрации, или вменяется в обязанность другому лицу разрешить данную ситуацию. <br/> С фиксацией на удовлетворении потребности - ответ направлен на разрешение проблемы; реакция принимает форму требования помощи от других лиц для решения ситуации; субъект сам берется за разрешение ситуации или же считает, что время и ход событий приведут к ее исправлению. Требуется, ожидается или явно подразумевается, что кто-то должен разрешить эту ситуацию.", 5-15)
];
const results2 = 
[
	new Result("Интропунитивные реакции - реакция направлена субъектом на самого себя; испытуемый принимает фрустрирующую ситуацию как благоприятную для себя, принимает вину на себя или берет на себя ответственность за исправление данной ситуации. <br/> С фиксацией на препятствии - в ответе испытуемого препятствие, вызвавшее фрустрацию, всячески подчеркивается или интерпретируется как своего рода благо, а не препятствие, или описывается как не имеющее серьезного значения. Фрустрирующая ситуация интерпретируется как благоприятно-выгодно-полезная, как приносящая удовлетворение(или заслуживающая наказания).", 0-2),
	new Result("Интропунитивные реакции - реакция направлена субъектом на самого себя; испытуемый принимает фрустрирующую ситуацию как благоприятную для себя, принимает вину на себя или берет на себя ответственность за исправление данной ситуации. <br/> С фиксацией на самозащите - главную роль в ответе испытуемого играет защита себя, своего «Я», и субъект или порицает кого-то, или признает свою вину, или же отмечает, что ответственность за фрустрацию никому не может быть приписана. Порицание, осуждение направлено на самого себя, доминирует чувство вины, собственной неполноценности, угрызения совести.", 3-4),
	new Result("Интропунитивные реакции - реакция направлена субъектом на самого себя; испытуемый принимает фрустрирующую ситуацию как благоприятную для себя, принимает вину на себя или берет на себя ответственность за исправление данной ситуации. <br/> С фиксацией на самозащите - главную роль в ответе испытуемого играет защита себя, своего «Я», и субъект или порицает кого-то, или признает свою вину, или же отмечает, что ответственность за фрустрацию никому не может быть приписана. Субъект признавая свою вину, отрицает ответственность, призывая на помощь смягчающие обстоятельства.", 4-5),
	new Result("Интропунитивные реакции - реакция направлена субъектом на самого себя; испытуемый принимает фрустрирующую ситуацию как благоприятную для себя, принимает вину на себя или берет на себя ответственность за исправление данной ситуации. <br/> С фиксацией на удовлетворении потребности - ответ направлен на разрешение проблемы; реакция принимает форму требования помощи от других лиц для решения ситуации. Субъект сам берется за разрешение ситуации или же считает, что время и ход событий приведут к ее исправлению. Субъект сам берется разрешить фрустрирующую ситуацию, открыто признавая или намекая на свою виновность", 5-15)
];
const results3 = 
[
	new Result("Импунитивные реакции - фрустрирующая ситуация рассматривается испытуемым как малозначащая, как отсутствие чьей-либо вины или как нечто такое, что может быть исправлено само собой, стоит только подождать и подумать. <br/> С фиксацией на препятствии - в ответе испытуемого препятствие, вызвавшее фрустрацию, всячески подчеркивается или интерпретируется как своего рода благо, а не препятствие, или описывается как не имеющее серьезного значения. Трудности фрустрирующей ситуации не замечаются или сводятся к полному ее отрицанию.", 0-2),
	new Result("Импунитивные реакции - фрустрирующая ситуация рассматривается испытуемым как малозначащая, как отсутствие чьей-либо вины или как нечто такое, что может быть исправлено само собой, стоит только подождать и подумать. <br/> С фиксацией на самозащите - главную роль в ответе испытуемого играет защита себя, своего «Я», и субъект или порицает кого-то, или признает свою вину, или же отмечает, что ответственность за фрустрацию никому не может быть приписана. Ответственность лица попавшего во фрустрирующую ситуацию, сведена до минимума, осуждение избегается.", 3-5),
	new Result("Импунитивные реакции - фрустрирующая ситуация рассматривается испытуемым как малозначащая, как отсутствие чьей-либо вины или как нечто такое, что может быть исправлено само собой, стоит только подождать и подумать. <br/> С фиксацией на удовлетворении потребности - ответ направлен на разрешение проблемы; реакция принимает форму требования помощи от других лиц для решения ситуации. Выражается надежда, что время, нормальныц ход событий разрешат проблему, просто надо немного подождать или же, что взаимопонимание и взаимоуступчивость устранят фрустрирующую ситуацию.", 5-15)
];


//Массив с вопросами
const questions = 
[   
	new Question("<img src='roz_1.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ничего страшного.", 32),
		new Answer("✔ Вы виноваты. Вы должны мне за химчистку.", 13),
		new Answer("✔ Черт тебя побери! Пошел к черту!", 121)
	]),

	new Question("<img src='roz_2.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Я виноват, но я сделал это ненарочно.", 222),
		new Answer("✔ Простите меня. Я беру ответственность за исправление этой ситуации на себя.", 23),
		new Answer("✔ Я не делал того, в чем вы меня обвиняете.", 122)
	]),

	new Question("<img src='roz_3.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Нет, все нормально.", 31),
		new Answer("✔ Да, мне стоит поговорить с впереди сидящим человеком.", 33),
		new Answer("✔ Да, но что поделаешь.", 32)
	]),

	new Question("<img src='roz_4.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ничего страшного, я на следующий билет куплю.", 32),
		new Answer("✔ Да, это меня беспокоит.", 11),
		new Answer("✔ Вы виноваты. Вы должны мне за новый билет.", 13)
	]),

	new Question("<img src='roz_5.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Мне очень жаль. Давайте мы вам ее починем.", 21),
		new Answer("✔ Тут я не виноват. Ваши часы изначально были бракованными.", 122),
		new Answer("✔ Простите. Моя вина. Позвольте мне исправить свою ошибку.", 23)
	]),

	new Question("<img src='roz_6.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Хорошо, тогда пожалуй возьму эти две книги.", 31),
		new Answer("✔ Но я хочу взять три сразу. Что же мне делать?", 11),
		new Answer("✔ Можем ли мы как-нибудь договориться? Позвольте поговорить с вашим начальством.", 33)
	]),

	new Question("<img src='roz_7.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ох, простите. Я не заметил этого.", 222),
		new Answer("✔ Простите за приношенные мной неудобства. Я такой шумный, постараюсь не шуметь.", 221),
		new Answer("✔ В чем дело? Я пришел сюда отдыхать. Не порть мне аппетит!", 121)
	]),

	new Question("<img src='roz_8.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Да, я в курсе. Желаю хорошего вечера.", 31),
		new Answer("✔ И ты согласился? Какого черта ты творишь?", 121),
		new Answer("✔ Да, так получилось.", 32)
	]),

	new Question("<img src='roz_9.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ А скоро он будет?", 11),
		new Answer("✔ Я не намерен ждать его. Вы подайте мне мой плащ.", 13),
		new Answer("✔ Хорошо, я подожду.", 31)
	]),

	new Question("<img src='roz_10.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Это не так!", 122),
		new Answer("✔ Сами вы лжец!", 121),
		new Answer("✔ Почему же я лжец?", 11)
	]),

	new Question("<img src='roz_11.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Хорошо, до свидания.", 31),
		new Answer("✔ Вы отнимаете у меня время своим пустым звонком!", 121),
		new Answer("✔ Ничего страшного, вы в этом не виноваты. До свидания.", 32)
	]),

	new Question("<img src='roz_12.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ В таком случае я возьму его шляпу ненадолго. Потом мы с ним поменяемся.", 33),
		new Answer("✔ Ничего страшного, он ведь просто перепутал.", 32),
		new Answer("✔ Вот ведь дурень! Верните его обратно. Пусть возвращает!", 13)
	]),

	new Question("<img src='roz_13.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Вы виноваты, что не предупредили. Теперь принимайте меня.", 121),
		new Answer("✔ Объяснитесь, пожалуйста. Почему вы не можете принять меня сейчас?", 11),
		new Answer("✔ Ладно, тогда перенесем встречу на...", 31)
	]),

	new Question("<img src='roz_14.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ничего, подождем еще немного.", 32),
		new Answer("✔ Я сейчас ей позвоню(с целью поторопить человека).", 23),
		new Answer("✔ Может быть она не может найти нас? Я позвоню ей(беспокойство).", 11)
	]),

	new Question("<img src='roz_15.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ничего страшного. В другой раз...", 31),
		new Answer("✔ Почему не сможешь? Мы ведь договаривались...", 11),
		new Answer("✔ Пошел к черту! Ты виноват...", 121)
	]),

	new Question("<img src='roz_16.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Я спешу и нет на вас времени", 31),
		new Answer("✔ Простите. Я виноват. Я спешу очень...", 221),
		new Answer("✔ Слушайте, давайте не будем поднимать шум. Мы можем обсудить этот...", 33)
	]),

	new Question("<img src='roz_17.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Прости, я виноват. Сейчас что-нибудь сделаю.", 23),
		new Answer("✔ Я виноват, но я неспециально ведь.", 222),
		new Answer("✔ Не сердись ты так. Сейчас что-нибудь решим.", 33)
	]),

	new Question("<img src='roz_18.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Черт! Почему бы вам больше их не заказывать?", 121),
		new Answer("✔ Вот блин, что же делать теперь?", 11),
		new Answer("✔ Ах, ну ничего не поделаешь.", 31)
	]),

	new Question("<img src='roz_19.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Простите, я виноват. Буду внимателен.", 221),
		new Answer("✔ Простите, я не заметил(я неспециально)", 222),
		new Answer("✔ Ничего, на ошибках мы учимся.", 32)
	]),

	new Question("<img src='roz_20.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Да, пусть идет к чертям. Сама виновата.", 121),
		new Answer("✔ Не имеет никакого значения", 31),
		new Answer("✔ Нужно у нее спросить в чем дело.", 33)
	]),

	new Question("<img src='roz_21.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Вы думаете, я в этом причастна?", 11),
		new Answer("✔ Какое несчастье!? Мне очень жаль...", 21),
		new Answer("✔ Меня эта не волнует.", 31)
	]),

	new Question("<img src='roz_22.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Нет, ничего страшного.", 32),
		new Answer("✔ Да пошел ты! Вы меня столкнули.", 121),
		new Answer("✔ Больно... Могли бы вы мне помочь встать?", 31)
	]),

	new Question("<img src='roz_23.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Хорошо.", 31),
		new Answer("✔ Пусть поторапливается. Мы можем опоздать.", 11),
		new Answer("✔ Передай наши извинения, мы не можем ее ждать.", 33)
	]),

	new Question("<img src='roz_24.jpg' style='width: 400px; height: auto;'>", 
	[
		new Answer("✔ Ничего страшного. Это всего лишь бумага.", 32),
		new Answer("✔ Я сам виноват. Мне нужно было быть внимательней возле детей.", 221),
		new Answer("✔ Вы виноваты! Не можете уследить за своим ребенком!", 121)
	])

];

//Сам тест
const quiz = new Quiz(1, questions, results1, results2, results3);

Update();

//Обновление теста
function Update()
{
	//Проверяем, есть ли ещё вопросы
	if(quiz.current < quiz.questions.length) 
	{
		//Если есть, меняем вопрос в заголовке
		headElem.innerHTML = quiz.questions[quiz.current].img;

		//Удаляем старые варианты ответов
		buttonsElem.innerHTML = "";

		//Создаём кнопки для новых вариантов ответов
		for(let i = 0; i < quiz.questions[quiz.current].answers.length; i++)
		{
			let btn = document.createElement("button");
			btn.className = "button";

			btn.innerHTML = quiz.questions[quiz.current].answers[i].text;

			btn.setAttribute("index", i);

			buttonsElem.appendChild(btn);
		}
		
		//Выводим номер текущего вопроса
		pagesElem.innerHTML = (quiz.current + 1) + " / " + quiz.questions.length;

		//Вызываем функцию, которая прикрепит события к новым кнопкам
		Init();
	}
	else
	{
		bodyElem[0].style.backgroundImage = "url(https://images.unsplash.com/photo-1536514498073-50e69d39c6cf?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80)";
		headtextElem[0].style.fontSize = "35px";
		headtextElem[0].style.marginLeft = "20px";
		headtextElem[0].style.marginTop = "110px";
		pages1Elem[0].style.fontSize = "40px";
		//Если это конец, то выводим результат
		buttonsElem.innerHTML = "";
		if (quiz.result == 1) headElem.innerHTML = quiz.results1[quiz.result1].text;
		if (quiz.result == 2) headElem.innerHTML = quiz.results2[quiz.result2].text;
		if (quiz.result == 3) headElem.innerHTML = quiz.results3[quiz.result3].text;
		pagesElem.innerHTML = "Ваши результаты: <br/> Направления реакции и типа реакции";
	}
}

function Init()
{
	//Находим все кнопки
	let btns = document.getElementsByClassName("button");

	for(let i = 0; i < btns.length; i++)
	{
		//Прикрепляем событие для каждой отдельной кнопки
		//При нажатии на кнопку будет вызываться функция Click()
		btns[i].addEventListener("click", function (e) { Click(e.target.getAttribute("index")); });
	}
}

function Click(index) 
{
	//Получаем номер правильного ответа
	let correct = quiz.Click(index);

	//Находим все кнопки
	let btns = document.getElementsByClassName("button");

	//Ждём секунду и обновляем тест
	setTimeout(Update, 200);
}